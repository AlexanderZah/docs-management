services:
  postgres:
    image: postgres:15
    container_name: mydb_pg
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=myDb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myDb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  migrate:
    image: migrate/migrate
    volumes:
    - ../migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://user:password@postgres:5432/myDb?sslmode=disable",
      "up"
    ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
  
  redis:
    image: redis:7
    container_name: docs_redis
    ports:
      - "6379:6379"
    networks:
      - backend

  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: docs_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      CONFIG_PATH: /root/config/docker.yaml
    ports:
      - "8082:8082"
    volumes:
      - ./:/app
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata: